Умножение на големи матрици

Напишете програма, която да умножава две матрици. 
Входните данни на програмата са два файла, а изходните - един файл. Всеки файл съдържа по една матрица. Форматът на файловете е:
1. Едно число от тип int, което специфицира броят на редовете на матрицата m.
2. Едно число от тип int, което специфицира броят на колоните на матрицата n.
3. m*n числа от тип double за елементите на матрицата. В началото се намират елементите на първия ред подредени по колона, после - на втория и т. н.

Имплементирайте две версии на умножението:
1. Линейна (без нишки).
2. Паралелна. 

В TestData.zip са дадени няколко комплекта примерни матрици в поддиректории Ex1, Ex2 и т. н. Във всяка директория има по три файла. Във файловете 
left и right са входните матрици, а във файла result е очакваният резултат. Използвайте примерните данни за да проверите коректността на решението си.

При възможно най-малко работещи процеси на компютъра Ви, за една двойка входни матрици от примерните:
1. Засечете времето (в ms) за изпълнение на линейната версия на алгоритъма. Отчетете само времето за самото умножение (т.е. изключете времето за четене
 и запис на елементите на матриците от и във файловете). Нека T е средното време за изпълнение от 10 или повече опита.
2. Нека k е броят на процесорните ядра (в случай на интелски процесори с HyperThreading считайте процесорните нишки за отделни ядра) във Вашия компютър.
Засечете времето (в ms) за изпълнение на паралелната версия на алгоритъма с използването на най-много i едновременно изпълняващи се нишки за i 
от 1 до 2*k. Нека t(i) е средното време за изпълнение от 10 или повече опита. Ускорението спрямо линейния алгоритъм може да получите така: 
a(i) = T / t(i). Запазете a(i) с точност до четвъртата цифра след десетичната запетая като част от решението.

Подсказки:
1. За разпаралеляване на алгоритъма може да използвате Fork/Join.
2. За четене на файловете използвайте DataInputStream, а за запис - DataOutputStream.